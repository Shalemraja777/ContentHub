{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shalem Raja\\\\Dropbox\\\\PC\\\\Desktop\\\\owncodes\\\\Blog-Website\\\\client\\\\src\\\\components\\\\home\\\\post\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Box, TextField } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { API } from '../../../service/api';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get('category');\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await API.getAllPosts({\n        category: category || ''\n      });\n      if (response.isSuccess) {\n        setPosts(response.data);\n        setFilteredPosts(response.data); // Initialize filtered posts with all posts\n      }\n    };\n    fetchData();\n  }, [category]);\n  const handleSearch = searchTerm => {\n    const filtered = posts.filter(post => {\n      var _post$title$toLowerCa;\n      return (_post$title$toLowerCa = post.title.toLowerCase().includes(searchTerm.toLowerCase())) !== null && _post$title$toLowerCa !== void 0 ? _post$title$toLowerCa : post.username.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n    setFilteredPosts(filtered);\n  };\n  const handleChange = e => {\n    const searchTerm = e.target.value;\n    setSearchTerm(searchTerm);\n    handleSearch(searchTerm);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search by Username\",\n      variant: \"outlined\",\n      value: searchTerm,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), (filteredPosts === null || filteredPosts === void 0 ? void 0 : filteredPosts.length) ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 3,\n        sm: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          to: `details/${post._id}`,\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        color: '878787',\n        margin: '30px 80px',\n        fontSize: 18\n      },\n      children: \"No posts found for the specified username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(Posts, \"mK9eEr9jaIsG+CKSa5TKsQZOp7Y=\", false, function () {\n  return [useSearchParams];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Box","TextField","Link","useSearchParams","API","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","searchTerm","setSearchTerm","searchParams","category","get","fetchData","response","getAllPosts","isSuccess","data","handleSearch","filtered","filter","post","_post$title$toLowerCa","title","toLowerCase","includes","username","handleChange","e","target","value","children","label","variant","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","container","spacing","map","item","lg","sm","xs","style","textDecoration","color","to","_id","margin","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Shalem Raja/Dropbox/PC/Desktop/owncodes/Blog-Website/client/src/components/home/post/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Box, TextField } from '@mui/material';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport { API } from '../../../service/api';\r\nimport Post from './Post';\r\n\r\nconst Posts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filteredPosts, setFilteredPosts] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchParams] = useSearchParams();\r\n    const category = searchParams.get('category');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => { \r\n            let response = await API.getAllPosts({ category: category || '' });\r\n            if (response.isSuccess) {\r\n                setPosts(response.data);\r\n                setFilteredPosts(response.data); // Initialize filtered posts with all posts\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [category]);\r\n\r\n    const handleSearch = (searchTerm) => {\r\n        const filtered = posts.filter(post =>post.title.toLowerCase().includes(searchTerm.toLowerCase())?? post.username.toLowerCase().includes(searchTerm.toLowerCase()));\r\n        setFilteredPosts(filtered);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const searchTerm = e.target.value;\r\n        setSearchTerm(searchTerm);\r\n        handleSearch(searchTerm);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                label=\"Search by Username\"\r\n                variant=\"outlined\"\r\n                value={searchTerm}\r\n                onChange={handleChange}\r\n            />\r\n            {\r\n                filteredPosts?.length ? (\r\n                    <Grid container spacing={2}>\r\n                        {filteredPosts.map(post => (\r\n                            <Grid item key={post._id} lg={3} sm={4} xs={12}>\r\n                                <Link style={{ textDecoration: 'none', color: 'inherit' }} to={`details/${post._id}`}>\r\n                                    <Post post={post} />\r\n                                </Link>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                ) : (\r\n                    <Box style={{ color: '878787', margin: '30px 80px', fontSize: 18 }}>\r\n                        No posts found for the specified username\r\n                    </Box>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}