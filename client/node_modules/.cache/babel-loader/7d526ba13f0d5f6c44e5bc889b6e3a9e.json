{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shalem Raja\\\\Dropbox\\\\PC\\\\Desktop\\\\owncodes\\\\Blog-Website\\\\client\\\\src\\\\components\\\\home\\\\post\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Box, TextField } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { API } from '../../../service/api';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get('category');\n  useEffect(() => {\n    fetchData();\n  }, [category]); // Fetch data when category changes\n\n  const fetchData = async () => {\n    let response;\n    if (searchTerm) {\n      // If search term is present, filter posts based on search term\n      response = await API.searchPosts({\n        searchTerm\n      });\n    } else {\n      // If no search term, fetch all posts based on category\n      response = await API.getAllPosts({\n        category: category || ''\n      });\n    }\n    if (response.isSuccess) {\n      setPosts(response.data);\n    }\n  };\n  const handleSearch = () => {\n    fetchData(); // Trigger fetching data based on search term\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search Posts\",\n      variant: \"outlined\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyPress: e => {\n        if (e.key === 'Enter') {\n          handleSearch();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), (posts === null || posts === void 0 ? void 0 : posts.length) ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        lg: 3,\n        sm: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          to: `details/${post._id}`,\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        color: '878787',\n        margin: '30px 80px',\n        fontSize: 18\n      },\n      children: \"No data is available for selected category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(Posts, \"rqidGFqjXm5ng20sUN9HtUAxXFc=\", false, function () {\n  return [useSearchParams];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Box","TextField","Link","useSearchParams","API","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","posts","setPosts","searchTerm","setSearchTerm","searchParams","category","get","fetchData","response","searchPosts","getAllPosts","isSuccess","data","handleSearch","children","label","variant","value","onChange","e","target","onKeyPress","key","fileName","_jsxFileName","lineNumber","columnNumber","length","container","spacing","map","post","item","lg","sm","xs","style","textDecoration","color","to","_id","margin","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Shalem Raja/Dropbox/PC/Desktop/owncodes/Blog-Website/client/src/components/home/post/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Box, TextField } from '@mui/material';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\nimport { API } from '../../../service/api';\r\nimport Post from './Post';\r\n\r\nconst Posts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [searchParams] = useSearchParams();\r\n    const category = searchParams.get('category');\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [category]); // Fetch data when category changes\r\n\r\n    const fetchData = async () => {\r\n        let response;\r\n        if (searchTerm) {\r\n            // If search term is present, filter posts based on search term\r\n            response = await API.searchPosts({ searchTerm });\r\n        } else {\r\n            // If no search term, fetch all posts based on category\r\n            response = await API.getAllPosts({ category: category || '' });\r\n        }\r\n        if (response.isSuccess) {\r\n            setPosts(response.data);\r\n        }\r\n    };\r\n\r\n    const handleSearch = () => {\r\n        fetchData(); // Trigger fetching data based on search term\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                label=\"Search Posts\"\r\n                variant=\"outlined\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                onKeyPress={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        handleSearch();\r\n                    }\r\n                }}\r\n            />\r\n            {\r\n                posts?.length ? (\r\n                    <Grid container spacing={2}>\r\n                        {posts.map(post => (\r\n                            <Grid item key={post._id} lg={3} sm={4} xs={12}>\r\n                                <Link style={{ textDecoration: 'none', color: 'inherit' }} to={`details/${post._id}`}>\r\n                                    <Post post={post} />\r\n                                </Link>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                ) : (\r\n                    <Box style={{ color: '878787', margin: '30px 80px', fontSize: 18 }}>\r\n                        No data is available for selected category\r\n                    </Box>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}