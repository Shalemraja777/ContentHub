{"ast":null,"code":"// api.js\n\nimport axios from 'axios';\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from '../constants/config';\nimport { getAccessToken, getType } from '../utils/common-utils';\nconst API_URL = 'http://localhost:8000';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n});\naxiosInstance.interceptors.request.use(function (config) {\n  if (config.TYPE.params) {\n    config.params = config.TYPE.params;\n  } else if (config.TYPE.query) {\n    config.url = config.url + '/' + config.TYPE.query;\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  // Stop global loader here\n  return processResponse(response);\n}, function (error) {\n  // Stop global loader here\n  return Promise.reject(processError(error));\n});\nconst processResponse = response => {\n  if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n    return {\n      isSuccess: true,\n      data: response.data\n    };\n  } else {\n    return {\n      isFailure: true,\n      status: response === null || response === void 0 ? void 0 : response.status,\n      msg: response === null || response === void 0 ? void 0 : response.msg,\n      code: response === null || response === void 0 ? void 0 : response.code\n    };\n  }\n};\nconst processError = error => {\n  if (error.response) {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403) {\n      sessionStorage.clear();\n    } else {\n      console.log(\"ERROR IN RESPONSE: \", error.toJSON());\n      return {\n        isError: true,\n        msg: API_NOTIFICATION_MESSAGES.responseFailure,\n        code: error.response.status\n      };\n    }\n  } else if (error.request) {\n    console.log(\"ERROR IN RESPONSE: \", error.toJSON());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGES.requestFailure,\n      code: \"\"\n    };\n  } else {\n    console.log(\"ERROR IN RESPONSE: \", error.toJSON());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGES.networkError,\n      code: \"\"\n    };\n  }\n};\nconst API = {\n  // Existing methods...\n\n  likePost: postId => axiosInstance({\n    method: 'POST',\n    url: `/posts/${postId}/like`,\n    headers: {\n      authorization: getAccessToken()\n    }\n  }),\n  dislikePost: postId => axiosInstance({\n    method: 'POST',\n    url: `/posts/${postId}/dislike`,\n    headers: {\n      authorization: getAccessToken()\n    }\n  })\n};\nexport { API };","map":{"version":3,"names":["axios","API_NOTIFICATION_MESSAGES","SERVICE_URLS","getAccessToken","getType","API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","TYPE","params","query","url","error","Promise","reject","response","processResponse","processError","status","isSuccess","data","isFailure","msg","code","_error$response","sessionStorage","clear","console","log","toJSON","isError","responseFailure","requestFailure","networkError","API","likePost","postId","method","authorization","dislikePost"],"sources":["C:/Users/Shalem Raja/Dropbox/PC/Desktop/owncodes/Blog-Website/client/src/service/api.js"],"sourcesContent":["// api.js\r\n\r\nimport axios from 'axios';\r\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from '../constants/config';\r\nimport { getAccessToken, getType } from '../utils/common-utils';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 10000,\r\n    headers: {\r\n        \"content-type\": \"application/json\"\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    function (config) {\r\n        if (config.TYPE.params) {\r\n            config.params = config.TYPE.params\r\n        } else if (config.TYPE.query) {\r\n            config.url = config.url + '/' + config.TYPE.query;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n    function (response) {\r\n        // Stop global loader here\r\n        return processResponse(response);\r\n    },\r\n    function (error) {\r\n        // Stop global loader here\r\n        return Promise.reject(processError(error));\r\n    }\r\n)\r\n\r\nconst processResponse = (response) => {\r\n    if (response?.status === 200) {\r\n        return { isSuccess: true, data: response.data }\r\n    } else {\r\n        return {\r\n            isFailure: true,\r\n            status: response?.status,\r\n            msg: response?.msg,\r\n            code: response?.code\r\n        }\r\n    }\r\n}\r\n\r\nconst processError = (error) => {\r\n    if (error.response) {\r\n        if (error.response?.status === 403) {\r\n            sessionStorage.clear();\r\n        } else {\r\n            console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n            return {\r\n                isError: true,\r\n                msg: API_NOTIFICATION_MESSAGES.responseFailure,\r\n                code: error.response.status\r\n            }\r\n        }\r\n    } else if (error.request) {\r\n        console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.requestFailure,\r\n            code: \"\"\r\n        }\r\n    } else {\r\n        console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.networkError,\r\n            code: \"\"\r\n        }\r\n    }\r\n}\r\n\r\nconst API = {\r\n    // Existing methods...\r\n\r\n    likePost: (postId) => axiosInstance({\r\n        method: 'POST',\r\n        url: `/posts/${postId}/like`,\r\n        headers: {\r\n            authorization: getAccessToken(),\r\n        }\r\n    }),\r\n\r\n    dislikePost: (postId) => axiosInstance({\r\n        method: 'POST',\r\n        url: `/posts/${postId}/dislike`,\r\n        headers: {\r\n            authorization: getAccessToken(),\r\n        }\r\n    })\r\n};\r\n\r\nexport { API };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}