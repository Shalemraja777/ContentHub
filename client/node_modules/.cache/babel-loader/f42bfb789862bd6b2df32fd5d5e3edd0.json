{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shalem Raja\\\\Dropbox\\\\PC\\\\Desktop\\\\owncodes\\\\Blog-Website\\\\client\\\\src\\\\components\\\\details\\\\DetailView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { styled, Box, Typography, Button } from '@mui/material';\nimport { ThumbUpAlt as ThumbUpIcon, ThumbDownAlt as ThumbDownIcon } from '@mui/icons-material';\nimport { useParams } from 'react-router-dom';\nimport { API } from '../../service/api';\nimport { DataContext } from '../../context/DataProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled(Box)({\n  margin: '50px 100px',\n  '& img': {\n    width: '100%',\n    height: '50vh',\n    objectFit: 'cover'\n  }\n});\nconst DetailView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    account\n  } = useContext(DataContext);\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const response = await API.getPostById(id);\n      setPost(response.data);\n    };\n    fetchPost();\n  }, [id]);\n  const handleLike = async () => {\n    if (account) {\n      await API.likePost(id);\n      const response = await API.getPostById(id);\n      setPost(response.data);\n    } else {\n      // Handle when user is not logged in\n    }\n  };\n  const handleDislike = async () => {\n    if (account) {\n      await API.dislikePost(id);\n      const response = await API.getPostById(id);\n      setPost(response.data);\n    } else {\n      // Handle when user is not logged in\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: post && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.picture,\n        alt: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLike,\n          startIcon: /*#__PURE__*/_jsxDEV(ThumbUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 65\n          }, this),\n          color: \"primary\",\n          children: [post.likes.length, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDislike,\n          startIcon: /*#__PURE__*/_jsxDEV(ThumbDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 68\n          }, this),\n          color: \"secondary\",\n          children: [post.dislikes.length, \" Dislikes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(DetailView, \"Gr6lUZCPIINSKZSGUMEVjvNboQI=\", false, function () {\n  return [useParams];\n});\n_c = DetailView;\nexport default DetailView;\nvar _c;\n$RefreshReg$(_c, \"DetailView\");","map":{"version":3,"names":["React","useState","useEffect","useContext","styled","Box","Typography","Button","ThumbUpAlt","ThumbUpIcon","ThumbDownAlt","ThumbDownIcon","useParams","API","DataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","margin","width","height","objectFit","DetailView","_s","id","account","post","setPost","fetchPost","response","getPostById","data","handleLike","likePost","handleDislike","dislikePost","children","src","picture","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","title","description","onClick","startIcon","color","likes","length","dislikes","_c","$RefreshReg$"],"sources":["C:/Users/Shalem Raja/Dropbox/PC/Desktop/owncodes/Blog-Website/client/src/components/details/DetailView.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { styled, Box, Typography, Button } from '@mui/material';\r\nimport { ThumbUpAlt as ThumbUpIcon, ThumbDownAlt as ThumbDownIcon } from '@mui/icons-material';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { API } from '../../service/api';\r\nimport { DataContext } from '../../context/DataProvider';\r\n\r\nconst Container = styled(Box)({\r\n    margin: '50px 100px',\r\n    '& img': {\r\n        width: '100%',\r\n        height: '50vh',\r\n        objectFit: 'cover'\r\n    }\r\n});\r\n\r\nconst DetailView = () => {\r\n    const { id } = useParams();\r\n    const { account } = useContext(DataContext);\r\n    const [post, setPost] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            const response = await API.getPostById(id);\r\n            setPost(response.data);\r\n        };\r\n        fetchPost();\r\n    }, [id]);\r\n\r\n    const handleLike = async () => {\r\n        if (account) {\r\n            await API.likePost(id);\r\n            const response = await API.getPostById(id);\r\n            setPost(response.data);\r\n        } else {\r\n            // Handle when user is not logged in\r\n        }\r\n    };\r\n\r\n    const handleDislike = async () => {\r\n        if (account) {\r\n            await API.dislikePost(id);\r\n            const response = await API.getPostById(id);\r\n            setPost(response.data);\r\n        } else {\r\n            // Handle when user is not logged in\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            {post && (\r\n                <>\r\n                    <img src={post.picture} alt=\"post\" />\r\n                    <Typography variant=\"h4\">{post.title}</Typography>\r\n                    <Typography variant=\"body1\">{post.description}</Typography>\r\n                    <Box>\r\n                        <Button onClick={handleLike} startIcon={<ThumbUpIcon />} color=\"primary\">\r\n                            {post.likes.length} Likes\r\n                        </Button>\r\n                        <Button onClick={handleDislike} startIcon={<ThumbDownIcon />} color=\"secondary\">\r\n                            {post.dislikes.length} Dislikes\r\n                        </Button>\r\n                    </Box>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DetailView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}